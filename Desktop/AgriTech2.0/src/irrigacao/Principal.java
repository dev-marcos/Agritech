/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package irrigacao;
import bean.Acao;
import bean.Condicao;
import bean.Programacao;
import dao.AcaoDAO;
import dao.CondicaoDAO;
import dao.ConfigDAO;
import dao.MapDAO;
import dao.ProgramacaoDAO;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.nio.file.StandardCopyOption;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.time.format.ResolverStyle;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcos Vinicius
 */
public final class Principal extends javax.swing.JFrame {
    private static final long serialVersionUID = 1L;
    Condicao condInsUp;
    Acao acaoInsUp;

    /**
     * Creates new form Main
     */
    public Principal() {
        initComponents();
        setIcon();
        setLocationRelativeTo(null);
        GetProg();
        condInsUp = new Condicao();
        acaoInsUp = new Acao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbProgramacao = new javax.swing.JComboBox();
        btProgramacao = new javax.swing.JButton();
        btGerarArquivos = new javax.swing.JButton();
        btConfiguracao = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlCondicao = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lbLogica = new javax.swing.JLabel();
        cbLogica = new javax.swing.JComboBox();
        cbTipo = new javax.swing.JComboBox();
        lbTipo = new javax.swing.JLabel();
        lbParametro1 = new javax.swing.JLabel();
        cbParametro1 = new javax.swing.JComboBox();
        cbRelacao = new javax.swing.JComboBox();
        lbRelacao = new javax.swing.JLabel();
        cbParametro2 = new javax.swing.JComboBox();
        lbParametro2 = new javax.swing.JLabel();
        btAdicionarCondicao = new javax.swing.JButton();
        btCancCond = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCondicao = new javax.swing.JTable();
        pnlAcao = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAcao = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        lbDispositivo = new javax.swing.JLabel();
        cbDispositivo = new javax.swing.JComboBox();
        lbAcao = new javax.swing.JLabel();
        cbAcao = new javax.swing.JComboBox();
        btAdicionarAcao = new javax.swing.JButton();
        btCancAcao = new javax.swing.JButton();
        btAjuda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AgriTech - Sistema Automático de Irrigação");
        setMinimumSize(new java.awt.Dimension(674, 413));

        cbProgramacao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbProgramacaoItemStateChanged(evt);
            }
        });
        cbProgramacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbProgramacaoFocusLost(evt);
            }
        });
        cbProgramacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbProgramacaoKeyPressed(evt);
            }
        });

        btProgramacao.setText("Gerenciar");
        btProgramacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProgramacaoActionPerformed(evt);
            }
        });

        btGerarArquivos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/raw/ictxt.gif"))); // NOI18N
        btGerarArquivos.setText("Gerar Arquivos");
        btGerarArquivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGerarArquivosActionPerformed(evt);
            }
        });

        btConfiguracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/raw/78.png"))); // NOI18N
        btConfiguracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfiguracaoActionPerformed(evt);
            }
        });

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(580, 360));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lbLogica.setText("Lógica");

        cbLogica.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "E", "OU" }));
        cbLogica.setSelectedIndex(-1);
        cbLogica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLogicaActionPerformed(evt);
            }
        });
        cbLogica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbLogicaKeyPressed(evt);
            }
        });

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sensor", "Data", "Hora" }));
        cbTipo.setSelectedIndex(-1);
        cbTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTipoItemStateChanged(evt);
            }
        });
        cbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoActionPerformed(evt);
            }
        });
        cbTipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbTipoKeyPressed(evt);
            }
        });

        lbTipo.setText("Tipo");

        lbParametro1.setText("Parâmetro 1");

        cbParametro1.setEditable(true);
        cbParametro1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbParametro1KeyPressed(evt);
            }
        });

        cbRelacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", ">", "<", ">=", "<=", "<>" }));
        cbRelacao.setSelectedIndex(-1);
        cbRelacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbRelacaoKeyPressed(evt);
            }
        });

        lbRelacao.setText("Relação");

        cbParametro2.setEditable(true);
        cbParametro2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbParametro2KeyPressed(evt);
            }
        });

        lbParametro2.setText("Parâmetro 2");

        btAdicionarCondicao.setText("Adicionar");
        btAdicionarCondicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarCondicaoActionPerformed(evt);
            }
        });

        btCancCond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/raw/150.png"))); // NOI18N
        btCancCond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancCondActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbLogica)
                    .addComponent(cbLogica, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTipo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbParametro1)
                    .addComponent(cbParametro1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbRelacao)
                    .addComponent(cbRelacao, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cbParametro2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btAdicionarCondicao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCancCond))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbParametro2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbRelacao)
                        .addComponent(lbParametro2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbLogica)
                        .addComponent(lbTipo)
                        .addComponent(lbParametro1)))
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbRelacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbParametro2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btAdicionarCondicao)
                        .addComponent(cbLogica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbParametro1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btCancCond))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbCondicao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lógica", "Tipo", "Parâmetro 1", "Condição", "Parâmetro 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCondicao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCondicaoMouseClicked(evt);
            }
        });
        tbCondicao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbCondicaoKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tbCondicao);

        javax.swing.GroupLayout pnlCondicaoLayout = new javax.swing.GroupLayout(pnlCondicao);
        pnlCondicao.setLayout(pnlCondicaoLayout);
        pnlCondicaoLayout.setHorizontalGroup(
            pnlCondicaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCondicaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCondicaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlCondicaoLayout.setVerticalGroup(
            pnlCondicaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCondicaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Condição", pnlCondicao);

        tbAcao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dispositivo", "Ação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbAcao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAcaoMouseClicked(evt);
            }
        });
        tbAcao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbAcaoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbAcao);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lbDispositivo.setText("Dispositivo");

        cbDispositivo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bomba 1", "Bomba 2", "Bomba 3", "Bomba 4" }));
        cbDispositivo.setSelectedIndex(-1);
        cbDispositivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbDispositivoKeyPressed(evt);
            }
        });

        lbAcao.setText("Ação");

        cbAcao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ligar", "Desligar" }));
        cbAcao.setSelectedIndex(-1);
        cbAcao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbAcaoKeyPressed(evt);
            }
        });

        btAdicionarAcao.setText("Adicionar");
        btAdicionarAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarAcaoActionPerformed(evt);
            }
        });

        btCancAcao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/raw/150.png"))); // NOI18N
        btCancAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancAcaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDispositivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lbAcao)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cbAcao, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btAdicionarAcao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCancAcao)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDispositivo)
                    .addComponent(lbAcao))
                .addGap(1, 1, 1)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbAcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btAdicionarAcao))
                    .addComponent(btCancAcao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlAcaoLayout = new javax.swing.GroupLayout(pnlAcao);
        pnlAcao.setLayout(pnlAcaoLayout);
        pnlAcaoLayout.setHorizontalGroup(
            pnlAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlAcaoLayout.setVerticalGroup(
            pnlAcaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Ação", pnlAcao);

        btAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/raw/help.gif"))); // NOI18N
        btAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAjudaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbProgramacao, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btProgramacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btGerarArquivos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btConfiguracao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAjuda))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btConfiguracao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbProgramacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btProgramacao)
                        .addComponent(btGerarArquivos))
                    .addComponent(btAjuda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbLogicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLogicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbLogicaActionPerformed

    private void btAdicionarCondicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarCondicaoActionPerformed
        // TODO add your handling code here:
        if (cbProgramacao.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null, "Selecione uma programação!");
            cbProgramacao.requestFocus();
        }else{
            if (cbLogica.getSelectedIndex()==-1) {
                JOptionPane.showMessageDialog(null, "Selecione uma lógica!");
                cbLogica.requestFocus();
            } else if (cbTipo.getSelectedIndex()==-1) {
                JOptionPane.showMessageDialog(null, "Selecione um tipo de dado!");	
                cbTipo.requestFocus();
            } else if (cbParametro1.getSelectedItem()==null){
                JOptionPane.showMessageDialog(null, "Selecione ou informe um valor no Parâmetro 1!");	
                cbParametro1.requestFocus();
            } else if (cbParametro1.getSelectedItem().toString().equals("")) {
                JOptionPane.showMessageDialog(null, "Selecione ou informe um valor no Parâmetro 1!");	
                cbParametro1.requestFocus();
            } else if (cbRelacao.getSelectedIndex()==-1) {
                JOptionPane.showMessageDialog(null, "Selecione uma relação!");	
                cbRelacao.requestFocus();
            } else if (cbParametro2.getSelectedItem()==null){
                JOptionPane.showMessageDialog(null, "Selecione ou informe um valor no Parâmetro 2!");	
                cbParametro2.requestFocus();
            } else if (cbParametro2.getSelectedItem().toString().equals("")) {
                JOptionPane.showMessageDialog(null, "Selecione ou informe um valor no Parâmetro 2!");	
                cbParametro2.requestFocus();
            } else if (!validaParam(cbTipo.getSelectedIndex()+1, cbParametro1.getSelectedItem().toString())) {
                JOptionPane.showMessageDialog(null, "Valor inválido para o tipo de dado selecionado no Parâmetro 1!\nTipos válidos:\nSensor: Número inteiro\nData: Data formato dd/mm/yyyy\nHora: Hora formato hh:mm");
                cbTipo.requestFocus();
            } else if (!validaParam(cbTipo.getSelectedIndex()+1, cbParametro2.getSelectedItem().toString())) {
                JOptionPane.showMessageDialog(null, "Valor inválido para o tipo de dado selecionado no Parâmetro 2!\nTipos:\nSensor: Númerico inteiro\nData: Data formato dd/mm/yyyy\nHora: Hora formato hh:mm");
                cbTipo.requestFocus();
            }else {


                condInsUp.setId(idCond);
                condInsUp.setIdProgramacao(GetIdProg());
                condInsUp.setLogica(Encode(1, cbLogica.getSelectedItem().toString()));
                condInsUp.setTipoDado(Encode(2,cbTipo.getSelectedItem().toString()));
                condInsUp.setValor1(EncodeParam(cbTipo.getSelectedIndex()+1, cbParametro1.getSelectedItem().toString()));
                condInsUp.setCondicao(Encode(3,cbRelacao.getSelectedItem().toString()));
                condInsUp.setValor2(EncodeParam(cbTipo.getSelectedIndex()+1,cbParametro2.getSelectedItem().toString()));

                if (idCond==0) {
                    try {

                        CondicaoDAO dao = new CondicaoDAO();
                            dao.Inserir(condInsUp);
                            JOptionPane.showMessageDialog(null, "Adicionado com Sucesso!");
                            FiltraCond(GetIdProg());
                            ClearCond();
                        } catch (SQLException e) {
                        }
                } else {
                    try {

                        CondicaoDAO dao = new CondicaoDAO();
                            dao.Alterar(condInsUp);
                            JOptionPane.showMessageDialog(null, "Alterado com Sucesso!");
                            FiltraCond(GetIdProg());
                            ClearCond();
                        } catch (SQLException e) {
                        }
                }


            }  
        }
        
    }//GEN-LAST:event_btAdicionarCondicaoActionPerformed

    private void cbTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTipoItemStateChanged
        // TODO add your handling code here:
        CarregaTipo();
    }//GEN-LAST:event_cbTipoItemStateChanged

    private void cbProgramacaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbProgramacaoItemStateChanged
        // TODO add your handling code here:
        if (cbProgramacao.getSelectedIndex() != -1) {
            FiltraCond(GetIdProg());
            FiltraAcao(GetIdProg());
        }else{
            FiltraCond(0);
            FiltraAcao(0);
        }     
    }//GEN-LAST:event_cbProgramacaoItemStateChanged

    private void cbProgramacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbProgramacaoFocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbProgramacaoFocusLost

    private void cbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTipoActionPerformed

    private void tbCondicaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbCondicaoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_DELETE) {
            int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir?", "Atenção", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                    try {
                            CondicaoDAO dao = new CondicaoDAO();
                            dao.Excluir((Integer) tbCondicao.getModel().getValueAt(tbCondicao.getSelectedRow(),0));
                            FiltraCond(GetIdProg());
                            } catch (SQLException e) {
                            }

            }
        }
    }//GEN-LAST:event_tbCondicaoKeyPressed

    private void tbAcaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbAcaoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_DELETE) {
            int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir?", "Atenção", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                    try {
                            AcaoDAO dao = new AcaoDAO();
                            dao.Excluir((Integer) tbAcao.getModel().getValueAt(tbAcao.getSelectedRow(),0));
                            FiltraAcao(GetIdProg());
                            } catch (SQLException e) {
                            }

            }
        }
    }//GEN-LAST:event_tbAcaoKeyPressed

    private void tbCondicaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCondicaoMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount()==2) {
            btAdicionarCondicao.setText("Alterar");
            idCond = (Integer) tbCondicao.getModel().getValueAt(tbCondicao.getSelectedRow(),0);
            cbLogica.getModel().setSelectedItem(tbCondicao.getModel().getValueAt(tbCondicao.getSelectedRow(),1));
            cbTipo.getModel().setSelectedItem(tbCondicao.getModel().getValueAt(tbCondicao.getSelectedRow(),2));
            CarregaTipo();
            cbParametro1.getModel().setSelectedItem(DecodeParam(cbTipo.getSelectedIndex()+1, tbCondicao.getModel().getValueAt(tbCondicao.getSelectedRow(),3).toString()));
            cbRelacao.getModel().setSelectedItem(tbCondicao.getModel().getValueAt(tbCondicao.getSelectedRow(),4));
            cbParametro2.getModel().setSelectedItem(DecodeParam(cbTipo.getSelectedIndex()+1,tbCondicao.getModel().getValueAt(tbCondicao.getSelectedRow(),5).toString()));
        }
    }//GEN-LAST:event_tbCondicaoMouseClicked

    private void tbAcaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAcaoMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount()==2) {
            btAdicionarAcao.setText("Alterar");
            idAcao= (Integer) tbAcao.getModel().getValueAt(tbAcao.getSelectedRow(),0);
            cbDispositivo.getModel().setSelectedItem(tbAcao.getModel().getValueAt(tbAcao.getSelectedRow(),1));
            cbAcao.getModel().setSelectedItem(tbAcao.getModel().getValueAt(tbAcao.getSelectedRow(),2));
        }
    }//GEN-LAST:event_tbAcaoMouseClicked

    private void btAdicionarAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarAcaoActionPerformed
        // TODO add your handling code here:
        if (cbDispositivo.getSelectedIndex()==-1) {
                JOptionPane.showMessageDialog(null, "Selecione um dispositivo!");	
        } else if (cbAcao.getSelectedIndex()==-1) {
                JOptionPane.showMessageDialog(null, "Selecione uma ação!");	
        } else {
                acaoInsUp.setId(idAcao);
                acaoInsUp.setIdProgramacao(GetIdProg());
                acaoInsUp.setDispositivo(EncodeDisp(cbDispositivo.getSelectedItem().toString()));
                acaoInsUp.setAcao(EncodeAcao(cbAcao.getSelectedItem().toString()));

                if (idAcao==0) {
                        try {

                                AcaoDAO dao = new AcaoDAO();
                                        dao.Inserir(acaoInsUp);
                                        JOptionPane.showMessageDialog(null, "Adicionado com Sucesso!");
                                        FiltraAcao(GetIdProg());
                                        ClearAcao();
                                } catch (SQLException e) {
                                }
                } else {
                        try {

                                AcaoDAO dao = new AcaoDAO();
                                        dao.Alterar(acaoInsUp);
                                        JOptionPane.showMessageDialog(null, "Alterado com Sucesso!");
                                        btAdicionarAcao.setText("Adicionar");
                                        FiltraAcao(GetIdProg());
                                        ClearAcao();
                                } catch (SQLException e) {
                                }
                }
        }
    }//GEN-LAST:event_btAdicionarAcaoActionPerformed

    @SuppressWarnings("deprecation")
    private void btProgramacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProgramacaoActionPerformed
        // TODO add your handling code here:
        cadProgramacao cad = new cadProgramacao();
        cad.show();
        GetProg();
    }//GEN-LAST:event_btProgramacaoActionPerformed

    private void btGerarArquivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGerarArquivosActionPerformed
        // TODO add your handling code here:
        try {
					
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("choosertitle");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);

            if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
                
                try {
                    File diretorio = new File(chooser.getSelectedFile()+"\\Config");
                    diretorio.mkdir();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao criar o diretorio");
                    System.out.println(ex);
                }
                
                try {
                    File diretorio = new File(chooser.getSelectedFile()+"\\Log");
                    diretorio.mkdir();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao criar o diretorio");
                    System.out.println(ex);
                }
                
                
                List<String> condList = new ArrayList<>(); 
                List<String> acaoList = new ArrayList<>();
                
                try {
                    ProgramacaoDAO dao = new ProgramacaoDAO();
                    CondicaoDAO condDAO = new CondicaoDAO(); 
                    AcaoDAO acaoDAO = new AcaoDAO();
                    int codCond =0;
                    for (Programacao prog : dao.listAll()) {
                        if (prog.isAtivo()){
                            codCond++;
                            for (String st : condDAO.GeraArq(prog.getId())){
                               condList.add("|"+codCond+st);
                            }
                            for (String st : acaoDAO.GeraArq(prog.getId())){
                               acaoList.add("|"+codCond+st);
                            }
                           
                        }
                    }    
                } catch (SQLException e) {		
                }
                
                //prog.cfg
                try (FileWriter arqProg = new FileWriter(chooser.getSelectedFile()+"\\Config\\prog.cfg")) {
                    try (PrintWriter gravarProg = new PrintWriter(arqProg)) {
                        for (String st :  condList) {
                            gravarProg.println(st);	
                        }
                    }
                }

                //acao.cfg
                try (FileWriter arqAcao = new FileWriter(chooser.getSelectedFile()+"\\Config\\acao.cfg")) {
                    try (PrintWriter gravarAcao = new PrintWriter(arqAcao)) {
                        for (String st :  acaoList) {
                            gravarAcao.println(st);
                        }
                    }
                }
                
                //config.cfg
                ConfigDAO config = new ConfigDAO();
                try (FileWriter arqConfig = new FileWriter(chooser.getSelectedFile()+"\\Config\\config.cfg")) {
                    try (PrintWriter gravarConfig = new PrintWriter(arqConfig)) {
                        for (String st :  config.GeraArq()) {
                            gravarConfig.println(st);
                        }
                    }
                }
				
				//config.cfg
                MapDAO map = new MapDAO();
                try (FileWriter arqMap = new FileWriter(chooser.getSelectedFile()+"\\Config\\map.cfg")) {
                    try (PrintWriter gravarMap = new PrintWriter(arqMap)) {
                        for (String st :  map.GeraArq()) {
                            gravarMap.println(st);
                        }
                    }
                }
                

                if (JOptionPane.showConfirmDialog(null, "Deseja gerar o arquivo para atualizar o relógio?", "Escolha", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    try (FileWriter arqHora = new FileWriter(chooser.getSelectedFile()+"\\Config\\date.cfg")) { 
                        GregorianCalendar gc = new GregorianCalendar();
                        gc.setTime(new Date());
                        SimpleDateFormat sdf = new SimpleDateFormat("|yyyy|MM|dd|HH|mm|ss|");
                        gc.add(Calendar.MINUTE,2);
                        try (PrintWriter gravarHora = new PrintWriter(arqHora)) {
                            gravarHora.println(sdf.format(gc.getTime()));
                        }
                     }
                }
                

                JOptionPane.showMessageDialog(null, "Arquivos gerados com sucesso!");
            }
        } catch (IOException | SQLException e) {
        }
    }//GEN-LAST:event_btGerarArquivosActionPerformed

    private void btCancCondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancCondActionPerformed
        // TODO add your handling code here:
        ClearCond();
    }//GEN-LAST:event_btCancCondActionPerformed

    private void ClearCond(){
        idCond=0;
        CarregaTipo();
        btAdicionarCondicao.setText("Adicionar");
        cbLogica.setSelectedIndex(-1);
        cbTipo.setSelectedIndex(-1);
        cbParametro1.setSelectedIndex(-1);
        cbParametro1.removeAllItems();
        cbRelacao.setSelectedIndex(-1);
        cbParametro2.setSelectedIndex(-1);
        cbParametro2.removeAllItems();
        cbLogica.requestFocus();
    }
    
    private void btCancAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancAcaoActionPerformed
        // TODO add your handling code here:
        ClearAcao();
    }//GEN-LAST:event_btCancAcaoActionPerformed

    @SuppressWarnings("deprecation")
    private void btConfiguracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfiguracaoActionPerformed
        // TODO add your handling code here:
        Config config = new Config();
        config.show();
    }//GEN-LAST:event_btConfiguracaoActionPerformed

    private void btAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAjudaActionPerformed

        if (Desktop.isDesktopSupported()) {
            File file = new File("Manual AgriTech.pdf");
            
            InputStream source = getClass().getResourceAsStream("/raw/Manual AgriTech.pdf");      

            try {
                java.nio.file.Files.copy(source, file.toPath(), StandardCopyOption.REPLACE_EXISTING);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } 
            
            if(file.exists() && !file.isDirectory()) {
                try {
                    Desktop.getDesktop().open(file);
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }  
        
            
    }//GEN-LAST:event_btAjudaActionPerformed

    private void cbLogicaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbLogicaKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbLogicaKeyPressed

    private void cbTipoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbTipoKeyPressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cbTipoKeyPressed
    
    private void cbParametro1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbParametro1KeyPressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cbParametro1KeyPressed

    private void cbRelacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbRelacaoKeyPressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cbRelacaoKeyPressed

    private void cbParametro2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbParametro2KeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbParametro2KeyPressed

    private void cbDispositivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbDispositivoKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbDispositivoKeyPressed

    private void cbAcaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbAcaoKeyPressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cbAcaoKeyPressed

    private void cbProgramacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbProgramacaoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            cbLogica.requestFocus();
        }
    }//GEN-LAST:event_cbProgramacaoKeyPressed

    private void ClearAcao(){
        idAcao=0;
        btAdicionarAcao.setText("Adicionar");
        cbDispositivo.setSelectedIndex(-1);
        cbAcao.setSelectedIndex(-1);
        cbDispositivo.requestFocus();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            // pega aparencia do SO
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
        } 

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Principal().setVisible(true);
        });
    }
    
    
    
     /**
     * 
     * @param tipo	1=Sensor 2=Data 3=Hora
     * @param valor
     * @return
     */
    public boolean validaParam(int tipo, String valor) {
    	boolean ret=false;
    	switch (tipo) {
            case 1: 
                try{
                    if (!valor.equals("Sensor 1")&&!valor.equals("Sensor 2")&&!valor.equals("Sensor 3")&&!valor.equals("Sensor 4")) {
                        Integer.parseInt(valor);
                        ret=true;
                    } else {
                        ret = true;
                    }
                }catch(NumberFormatException e){
                    ret=false;
                } 	
                break;
            case 2:	
                try {
                    if (!valor.equals("Atual")) {
                        String dateFormat = "dd/MM/uuuu";

                        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(dateFormat).withResolverStyle(ResolverStyle.STRICT);
                        LocalDate.parse(valor, dateTimeFormatter);
                        ret= true;
                    } else {
                        ret=true;
                    }
                } catch (DateTimeParseException e) {
                    ret= false;
                }
                break;
            case 3: 
                try{
                    if (!valor.equals("Atual")) {
                        DateFormat df = new SimpleDateFormat("HH:mm");
                        df.setLenient( false );
                        df.parse(valor);
                        ret=true;
                    } else {
                        ret=true;
                    }
                }catch(ParseException e){
                    ret=false;
                }
                break;
            }
    	  	
    	return ret;
    }
    
    
    @SuppressWarnings("unchecked")
    public void GetProg() {
        try {
            ProgramacaoDAO dao = new ProgramacaoDAO();
              
            cbProgramacao.removeAllItems();

            for (Programacao prog : dao.listAll()) {
                cbProgramacao.addItem(prog);
            }    
        } catch (SQLException e) {		
        }
    }
	
    public void FiltraAcao(int iProg) {
        try {

            AcaoDAO dao = new AcaoDAO();
            List<Acao> list = dao.listAll(iProg);
            DefaultTableModel dtm = new DefaultTableModel() {
                private static final long serialVersionUID = 1L;
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            for (int i = 0; i < dtm.getRowCount(); i++) {
                dtm.removeRow(i);
            } 
            dtm.addColumn("ID");
            dtm.addColumn("Dispositivo");
            dtm.addColumn("Ação");

            list.stream().forEach((acao) -> {
                dtm.addRow(new Object[] {acao.getId(), DecodeDisp(acao.getDispositivo()), DecodeAcao(acao.getAcao())});
            });
            tbAcao.setModel(dtm);
        } catch (SQLException e) {
        }
    }

    public void FiltraCond(int iProg) {
        try {

            CondicaoDAO dao = new CondicaoDAO();
            List<Condicao> list = dao.listAll(iProg);
            DefaultTableModel dtm = new DefaultTableModel() {
                private static final long serialVersionUID = 1L;
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            for (int i = 0; i < dtm.getRowCount(); i++) {
                dtm.removeRow(i);
            } 
            dtm.addColumn("ID");
            dtm.addColumn("Lógica");
            dtm.addColumn("Tipo");
            dtm.addColumn("Parâmetro 1");
            dtm.addColumn("Condição");
            dtm.addColumn("Parâmetro 2");

            list.stream().forEach((cond) -> {
                dtm.addRow(new Object[] {cond.getId(),Decode(1,cond.getLogica()), Decode(2,cond.getTipoDado()), DecodeParam(cond.getTipoDado(), cond.getValor1()), Decode(3,cond.getCondicao()), DecodeParam(cond.getTipoDado(),cond.getValor2())});
            });
            tbCondicao.setModel(dtm);


        } catch (SQLException e) {
        }
    }
    
    
    public int GetIdProg() {
        return cbProgramacao.getSelectedItem() != null ? ((Programacao) cbProgramacao.getSelectedItem()).getId(): 0;
    }
    
    public String Decode(int i, int valor) {
        String result="";

        switch (i) {
            case 1: switch (valor) {
                case 1: result="E";
                    break;
                case 2: result="OU";
                    break;
            }			
            break;
            case 2: switch (valor) {
                case 1: result="Sensor";
                    break;
                case 2: result="Data";
                    break;
                case 3: result="Hora";
                    break;
            }
            break;
        case 3: switch (valor) {
                case 1: result="=";
                    break;
                case 2: result=">";
                    break;
                case 3: result="<";
                    break;
                case 4: result=">=";
                    break;
                case 5: result="<=";
                    break;
                case 6: result="<>";
                    break;
            }	
            break;
        }
        return result;
    }
    /**
     * @param valor
     * @return 
     * @param i 1=L�gica 2=Tipo 3=Condi��o
     */
    public int Encode(int i, String valor) {
            int result=0;

            switch (i) {
            case 1: switch(valor) {
                            case "E": result=1;
                                    break;
                            case "OU": result=2;
                                    break;
                            }			
                    break;
            case 2: switch (valor) {
                            case "Sensor": result=1;
                                    break;
                            case "Data": result=2;
                                    break;
                            case "Hora": result=3;
                                    break;
                            }
                    break;
            case 3: switch (valor) {
                            case "=": result=1;
                                    break;
                            case ">": result=2;
                                    break;
                            case "<": result=3;
                                    break;
                            case ">=": result=4;
                                    break;
                            case "<=": result=5;
                                    break;
                            case "<>": result=6;
                                    break;
                            }	
                    break;
            }
            return result;
    }
    /**
     * 
     * @param i 1=Sensor 2=Data 3=Hora
     * @param valor
     * @return
     */
    public String EncodeParam(int i, String valor) {
            String ret="";
            switch (i) {
            case 1: switch (valor) {
                            case "Sensor 1": ret = "$A0";	
                                    break;
                            case "Sensor 2": ret = "$A1";	
                                    break;
                            case "Sensor 3": ret = "$A2";	
                                    break;
                            case "Sensor 4": ret = "$A3";	
                                    break;
                            default : ret= valor;
                            }
                    break;
            case 2: ret = (valor.equals("Atual")?"$date":valor);
                    break;
            case 3: ret = (valor.equals("Atual")?"$time":valor);
                    break;
            }
            return ret;
    }
    /**
     * 
     * @param i 1=Sensor 2=Data 3=Hora
     * @param valor
     * @return
     */
    public String DecodeParam(int i, String valor) {
            String ret;
            switch (i) {
            case 1: switch (valor) {
                            case "$A0": ret = "Sensor 1";	
                                    break;
                            case "$A1": ret = "Sensor 2";	
                                    break;
                            case "$A2": ret = "Sensor 3";	
                                    break;
                            case "$A3": ret = "Sensor 4";	
                                    break;
                            default: ret = valor;
                            }
                    break;
            case 2: ret = (valor.equals("$date")?"Atual":valor);
                    break;	
            case 3: ret = (valor.equals("$time")?"Atual":valor);
                    break;
            default: ret = valor;
            }
            return ret;
    }
    @SuppressWarnings("unchecked")
    public void CarregaTipo () {
            if (cbTipo.getSelectedIndex()==0) {
            cbParametro1.removeAllItems();
            cbParametro1.addItem("Sensor 1");
            cbParametro1.addItem("Sensor 2");
            cbParametro1.addItem("Sensor 3");
            cbParametro1.addItem("Sensor 4");      			

            cbParametro2.removeAllItems();
            cbParametro2.addItem("Sensor 1");
            cbParametro2.addItem("Sensor 2");
            cbParametro2.addItem("Sensor 3");
            cbParametro2.addItem("Sensor 4");
            } else {
                    cbParametro1.removeAllItems();
                    cbParametro1.addItem("Atual");

                    cbParametro2.removeAllItems();
                    cbParametro2.addItem("Atual");
            }
            cbParametro1.setSelectedIndex(-1);
            cbParametro2.setSelectedIndex(-1);
    }

    /**
     * 
     * @param valor Inteiro
     * @return String
     */
    public String DecodeDisp(int valor) {
            String ret="";
            switch (valor) {
                    case 1: ret = "Bomba 1";	
                            break;
                    case 2: ret = "Bomba 2";	
                            break;
                    case 3: ret = "Bomba 3";	
                            break;
                    case 4: ret = "Bomba 4";	
                            break;
            }
            return ret;
    }

    /**
     * 
     * @param valor String
     * @return Inteiro
     */
    public int EncodeDisp(String valor) {
            int ret=1;
            switch (valor) {
                    case "Bomba 1": ret = 1;	
                            break;
                    case "Bomba 2": ret = 2;	
                            break;
                    case "Bomba 3": ret = 3;	
                            break;
                    case "Bomba 4": ret = 4;	
                            break;
            }
            return ret;
    }

    /**
     * 
     * @param valor Inteiro
     * @return String
     */
    public String DecodeAcao(int valor) {
        String ret="";
        switch (valor) {
            case 0: ret = "Desligar";	
                break;
            case 1: ret = "Ligar";	
                break;
        }
        return ret;
    }

    /**
     * 
     * @param valor String
     * @return Inteiro
     */
    public int EncodeAcao(String valor) {
        int ret=0;
        switch (valor) {
            case "Desligar": ret = 0;	
                break;
            case "Ligar": ret = 1;	
                break;
        }
        return ret;
    }
	
     private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/raw/icone.png")));
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionarAcao;
    private javax.swing.JButton btAdicionarCondicao;
    private javax.swing.JButton btAjuda;
    private javax.swing.JButton btCancAcao;
    private javax.swing.JButton btCancCond;
    private javax.swing.JButton btConfiguracao;
    private javax.swing.JButton btGerarArquivos;
    private javax.swing.JButton btProgramacao;
    private javax.swing.JComboBox cbAcao;
    private javax.swing.JComboBox cbDispositivo;
    private javax.swing.JComboBox cbLogica;
    private javax.swing.JComboBox cbParametro1;
    private javax.swing.JComboBox cbParametro2;
    private javax.swing.JComboBox cbProgramacao;
    private javax.swing.JComboBox cbRelacao;
    private javax.swing.JComboBox cbTipo;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbAcao;
    private javax.swing.JLabel lbDispositivo;
    private javax.swing.JLabel lbLogica;
    private javax.swing.JLabel lbParametro1;
    private javax.swing.JLabel lbParametro2;
    private javax.swing.JLabel lbRelacao;
    private javax.swing.JLabel lbTipo;
    private javax.swing.JPanel pnlAcao;
    private javax.swing.JPanel pnlCondicao;
    private javax.swing.JTable tbAcao;
    private javax.swing.JTable tbCondicao;
    // End of variables declaration//GEN-END:variables
    private int idCond=0;
    private int idAcao=0;

   
}
